services:
  postgres:
    image: postgres:15-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: comment_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

  backend:
    image: node:18-alpine
    working_dir: /app
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      DATABASE_URL: "postgresql://postgres:password@postgres:5432/comment_system?schema=public"
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: "your-super-secret-jwt-key-here"
      JWT_REFRESH_SECRET: "your-super-secret-refresh-key-here"
      PORT: 3001
      NODE_ENV: development
      CORS_ORIGIN: "http://localhost:3000"
    depends_on:
      - postgres
      - redis
    networks:
      - app-network
    volumes:
      - ./server:/app
      - backend_node_modules:/app/node_modules
    command: sh -c "npm install --legacy-peer-deps && npx prisma generate && npm run start:dev"

  frontend:
    image: node:18-alpine
    working_dir: /app
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: "http://localhost:3001"
      NEXT_PUBLIC_WS_URL: "ws://localhost:3001"
      NEXTAUTH_URL: "http://localhost:3000"
      NEXTAUTH_SECRET: "your-nextauth-secret-here"
    depends_on:
      - backend
    networks:
      - app-network
    volumes:
      - ./client:/app
      - frontend_node_modules:/app/node_modules
      - frontend_next:/app/.next
    command: sh -c "npm install --legacy-peer-deps && npm run dev"

volumes:
  postgres_data:
  redis_data:
  backend_node_modules:
  frontend_node_modules:
  frontend_next:

networks:
  app-network:
    driver: bridge
